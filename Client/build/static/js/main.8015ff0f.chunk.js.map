{"version":3,"sources":["Components/CreateSubscription.js","CONSTANTS.js","Components/TierSelection.js","Components/GiftAidOptIn.js","App.js","reportWebVitals.js","index.js"],"names":["CreateSubscription","handleChange","subscriber","setSubscriber","stripe","useStripe","elements","useElements","handleSubscription","event","a","preventDefault","createPaymentMethod","type","card","getElement","CardElement","billing_details","result","error","console","log","message","postSubscriber","axios","post","paymentMethod","id","res","data","client_secret","status","confirmCardPayment","then","decline_code","target","reset","user","facebook_id","name","email","address","city","line1","state","postal_code","subscription","stripe_product","gift_aid","catch","err","className","onSubmit","placeholder","onChange","options","style","base","fontSize","color","invalid","hidePostalCode","disabled","CONSTANTS","price","increment","TierSelection","value","onClick","GiftAidOptIn","handleOptIn","donation","for","require","config","stripePromise","loadStripe","App","useState","tempSub","hasOwnProperty","src","alt","width","height","amount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8015ff0f.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\n\r\nconst CreateSubscription = ({handleChange, subscriber, setSubscriber}) => {\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n\r\n    const handlePayment = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if(!stripe || !elements){\r\n            return;\r\n        }\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n        \r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type:'card', card: cardElement, billing_details: subscriber['user']['billing_details']\r\n        });\r\n\r\n\r\n        if(error){\r\n            console.log(\"[Payment Method Error]\", error);\r\n        }else{\r\n            postSubscriber();\r\n            console.log(\"[PaymentMethod]\", paymentMethod);\r\n\r\n            console.log(\"Retrieving Client Secret...\")\r\n            const { data: clientSecret } = await axios.post('http://localhost:8082/api/create-payment-intent', {\r\n                amount: 100\r\n            });\r\n            console.log('[Client Secret]', clientSecret);\r\n\r\n            const confirmCardPayment = await stripe.confirmCardPayment(clientSecret, {payment_method: paymentMethod.id })\r\n            console.log('[Payment Confirmation]', confirmCardPayment);\r\n        }\r\n    };\r\n\r\n    const handleSubscription = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        if(!stripe || !elements){\r\n            return;\r\n        }\r\n\r\n        const result = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: elements.getElement(CardElement),\r\n            billing_details: subscriber['user']['billing_details'],\r\n        });\r\n\r\n        if(result.error){\r\n            console.log('[Payment Method Error]', result.error.message)\r\n        }else{\r\n\r\n            postSubscriber();\r\n\r\n            const res = await axios.post('http://localhost:8082/api/sub', {   \r\n                                                    'payment_method': result.paymentMethod.id, \r\n                                                    'email': subscriber['user']['billing_details']['email'], \r\n                                                    'item': subscriber['subscription']['stripe_product']});\r\n\r\n\r\n            console.log('[RES:]', res);\r\n            const { client_secret, status} = res.data;\r\n\r\n            console.log('[STATUS]', status)\r\n            if(status === 'requires_action'){\r\n                stripe.confirmCardPayment(client_secret)\r\n                    .then((result) => {\r\n                        if(result.error){\r\n                            // Display error message in UI\r\n                            console.log('[Payment Completion Error]', result.error.decline_code);\r\n                        } else{\r\n                            console.log('User Subscription Successful')\r\n                        }\r\n                    });\r\n            }\r\n            else{\r\n                console.log('User Subscription Successful')\r\n            }\r\n        }\r\n        \r\n        event.target.reset();\r\n\r\n    }\r\n\r\n\r\n    const postSubscriber = () => {\r\n        axios\r\n        .post('http://localhost:8082/api/subscriptions/', subscriber)\r\n        .then(res => {\r\n            setSubscriber({\r\n                            user: {\r\n                                facebook_id: \"\",\r\n                                billing_details:{\r\n                                    name: \"\",\r\n                                    email: \"\",\r\n                                    address:{\r\n                                        city:\"\",\r\n                                        line1:\"\",\r\n                                        state:\"\",\r\n                                        postal_code:\"\",\r\n                                    }}\r\n                            },\r\n                            subscription: {\r\n                                stripe_product: '',\r\n                                gift_aid: false\r\n                            }\r\n                        });\r\n        })\r\n        .catch(err => { console.log('[Error in posting subscriber]', err);     })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"subscription-container\">\r\n            <form className='subscription-form' onSubmit={handleSubscription}>\r\n                <ul className=\"subscriber-details\">\r\n                    <li><input type='text' placeholder='fb id' name='facebook_id' onChange={handleChange}/></li>\r\n                    <li><input type='text' placeholder='Full Name' name='name' onChange={handleChange}/></li>\r\n                    <li><input type='text' placeholder='Email' name='email' onChange={handleChange}/></li>\r\n                    <li><input type='text' placeholder='City' name='city' onChange={handleChange}/></li>\r\n                    <li><input type='text' placeholder='Address' name='line1' onChange={handleChange}/></li>\r\n                    <li><input type='text' placeholder='State/County' name='state' onChange={handleChange}/></li>\r\n                    <li><input type='text' placeholder='Postal Code' name='postal_code' onChange={handleChange}/></li>\r\n                </ul>\r\n                <CardElement\r\n                    options={{\r\n                        style:{\r\n                            base:{\r\n                                fontSize: '16px',\r\n                                color: 'dodgerblue',\r\n                                '::placeholder':{\r\n                                    color: 'white',\r\n                                },\r\n                            },\r\n                            invalid:{\r\n                                color: '#9e2146',\r\n                            }\r\n                        },\r\n                        hidePostalCode: true\r\n                    }}/>\r\n                    <button type='submit' disabled={!stripe}>Pay</button>\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateSubscription\r\n","export const CONSTANTS = \r\n{\r\n    PRIMARY_COLOR: '#f7941e',\r\n    ACCENT_COLOR: '#000000',\r\n    SECONDARY_COLOR: '',\r\n    LOGO: 'https://images.squarespace-cdn.com/content/v1/609d9011d5730510f8ba7ec8/6b372311-157f-4a96-abe6-9d81398e79c6/SocialMind_Logo_Transparent_Small.png?format=1500w',\r\n    FONT_FAMILY: '',\r\n    FONT_COLOR: '',\r\n\r\n    SUBSCRIPTION_TIER_ONE:      { stripe_product: 'price_1JT1tPH9H3bUbp4vTswRMwvx', price: 25.00, increment: 'weekly'},\r\n    SUBSCRIPTION_TIER_TWO:      { stripe_product: 'price_1JRcW1H9H3bUbp4vZFHNqKd0', price: 50.00, increment: 'monthly'},\r\n    SUBSCRIPTION_TIER_THREE:    { stripe_product: 'price_1JT2RzH9H3bUbp4v54HahZ53', price: 100.00, increment: 'monthly'},\r\n\r\n    GIFT_AID_DECLARATION: 'I want to Gift Aid my donation and any donations I make in the future or have made in the past 4 years, to [CHARITY NAME HERE]. I am a UK taxpayer and understand that if I pay less Income Tax and/or Capital Gains Tax than the amount of Gift Aid claimed on all of my donations in that tax year it is my responsibility to pay any difference. [CHARITY NAME HERE] will claim 25p on every £1 donated.',\r\n}\r\n","import React from 'react'\r\nimport { CONSTANTS } from '../CONSTANTS';\r\n\r\n\r\nconst TierSelection = ({handleChange}) => {\r\n\r\n    return(\r\n        <div className='tier-selection-container'>\r\n            <ul className='tier-list'>\r\n                <li className='tier-item'>\r\n                        <button name='stripe_product' value={CONSTANTS.SUBSCRIPTION_TIER_ONE.stripe_product} onClick={handleChange}>\r\n                            £{CONSTANTS.SUBSCRIPTION_TIER_ONE.price+'/'+CONSTANTS.SUBSCRIPTION_TIER_ONE.increment}\r\n                        </button>\r\n                </li>\r\n                <li className='tier-item'>\r\n                        <button value={CONSTANTS.SUBSCRIPTION_TIER_TWO.stripe_product} name='stripe_product' onClick={handleChange}>\r\n                            £{CONSTANTS.SUBSCRIPTION_TIER_TWO.price+'/'+CONSTANTS.SUBSCRIPTION_TIER_TWO.increment}\r\n                        </button>\r\n                </li>    \r\n                <li className='tier-item'>\r\n                        <button value={CONSTANTS.SUBSCRIPTION_TIER_THREE.stripe_product} name='stripe_product' onClick={handleChange}>\r\n                            £{CONSTANTS.SUBSCRIPTION_TIER_THREE.price+'/'+CONSTANTS.SUBSCRIPTION_TIER_THREE.increment}\r\n                        </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TierSelection;\r\n","import React from 'react'\r\nimport { CONSTANTS } from '../CONSTANTS';\r\n\r\n\r\nconst GiftAidOptIn = ({handleOptIn, donation}) => {\r\n\r\n\r\n    return (\r\n        <div className='gift-aid-container'>\r\n            {donation}\r\n            <label for=\"gift_aid\">Yes, I would like [INSERT CHARITY NAME] to claim Gift Aid on my donation</label>\r\n            <input type='checkbox' name='gift_aid' onChange={handleOptIn} />\r\n            <p className='gift-aid-decalration'>{CONSTANTS.GIFT_AID_DECLARATION}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GiftAidOptIn;","import './App.css';\r\nimport CreateSubscription from './Components/CreateSubscription';\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport { CONSTANTS } from './CONSTANTS';\r\nimport TierSelection from './Components/TierSelection';\r\nimport GiftAidOptIn from './Components/GiftAidOptIn';\r\nimport React, {useState} from 'react'\r\n\r\n\r\n// .env\r\nrequire('dotenv').config();\r\n\r\n//stripe\r\nconst stripePromise = loadStripe('pk_test_51JRZiRH9H3bUbp4v4rMxaEvcZTBtYY6VJECNDlJHErMviJO4Ooacgs4mr4SviOyWfcGTEn8ltTQVkUQSnaO0Iv0800x4iZH86h')\r\n\r\nfunction App() {\r\n\r\n\r\n  const [subscriber, setSubscriber] = useState({\r\n                                                  user: {\r\n                                                      facebook_id: \"\",\r\n                                                      billing_details:{\r\n                                                          name: \"\",\r\n                                                          email: \"\",\r\n                                                          address:{\r\n                                                              city:\"\",\r\n                                                              line1:\"\",\r\n                                                              state:\"\",\r\n                                                              postal_code:\"\",\r\n                                                          }}\r\n                                                  },\r\n                                                  subscription: {\r\n                                                      stripe_product: '',\r\n                                                      gift_aid: false\r\n                                                  }});\r\n    \r\n    \r\n\r\n  const handleChange = event => {\r\n    let tempSub = subscriber;\r\n\r\n    if(event.target.value === 'on'){\r\n        tempSub['subscription']['gift_aid']=!tempSub['subscription']['gift_aid'];\r\n    }\r\n    else{\r\n        if(tempSub['subscription'].hasOwnProperty(event.target.name)){\r\n            tempSub['subscription'][event.target.name] = event.target.value;\r\n        }\r\n        else{\r\n            if(tempSub['user']['billing_details'].hasOwnProperty(event.target.name)){\r\n                tempSub['user']['billing_details'][event.target.name] = event.target.value;\r\n            }\r\n            else{\r\n                if(tempSub['user']['billing_details']['address'].hasOwnProperty(event.target.name)){\r\n                    tempSub['user']['billing_details']['address'][event.target.name] = event.target.value;\r\n                }\r\n                else{\r\n                    tempSub['user'][event.target.name] = event.target.value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setSubscriber(tempSub);\r\n    console.log(subscriber);  \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <div className=\"App\">\r\n        <img src={CONSTANTS.LOGO} alt=\"company logo here\" width='100px' height='80ppx'/>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eleifend diam eu eleifend dapibus. Donec sodales lacus non enim aliquet convallis. Aliquam tristique eleifend sagittis. Morbi sed mattis erat, sed mollis lectus. Nulla vel ullamcorper metus. Praesent ac lectus sed dui gravida accumsan. Donec sollicitudin quam vitae facilisis elementum. Morbi ac augue quis nisi tincidunt sollicitudin.</p>\r\n        <TierSelection handleChange={handleChange} />\r\n        <CreateSubscription handleChange={handleChange} subscriber={subscriber} setSubscriber={setSubscriber}/>\r\n        <GiftAidOptIn amount={0} handleOptIn={handleChange}/>\r\n      </div>\r\n    </Elements>\r\n  );  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}